\version "2.18.2"
 
numberedSyllableDummyLyrics = 
    #(define-scheme-function
        (parser location prefix  initialIndex syllableCount)
        ((string? "w")  (number? 1) (number? 1000))
        ;(define syllableStrings 
        ;    (map-in-order
        ;        (lambda (i)
        ;            
        ;        )
        ;        
        ;    )
        ;)
        (make-sequential-music

            (map-in-order
                (lambda (i)
                    (make-music 'LyricEvent 'duration (ly:make-duration 0 0 1) 'text 
                        ; (markup #:line (#:simple prefix #:sub (number->string i)))
                        ; (markup #:line (#:simple (#:tiny prefix number->string i)))
                        ;(string-append prefix (number->string i))
                        #{  
                            \markup {
                                \column {
                                    \line{ \abs-fontsize #5 #(string-append prefix (number->string i)) }
                                    % \vspace #-0.3
                                    % \line {\abs-fontsize #10  \with-color #white A } 
                                    % \vspace #-0.6
                                }
                            } 
                        #}
                    )
                )
                (iota syllableCount initialIndex)
            )
            
            ;% (list 
            ;    % (make-music
            ;        % 'LyricEvent
            ;        % 'text
            ;        % "g"
            ;        % 'duration
            ;        % (ly:make-duration 0 0 1)
            ;    % )
            ;    % (make-music
            ;        % 'LyricEvent
            ;        % 'text
            ;        % "h"
            ;        % 'duration
            ;        % (ly:make-duration 0 0 1)
            ;    % )
            ;    % (make-music
            ;        % 'LyricEvent
            ;        % 'text
            ;        % "j"
            ;        % 'duration
            ;        % (ly:make-duration 0 0 1)
            ;    % )
            ;% )
        )   
    )
    % #(lambda (syllableCount) 
        % "a b c"
    % )



% % #(define-markup-command (get-instrument-name layout props) ()
    % % "return the current instrument name"
    % % (begin 
        % % (display props)
        % % (display (ly:chain-assoc-get 'instrumentName props "unknown" #t))
        % % (ly:chain-assoc-get 'instrumentName props "unknown" #t)
        % % #{ hello #}
    % % )
% % )


% annotateWithInstrumentName = 
    % #(define-music-function
        % (parser location)
        % ()
        % (newline)(display "parser is ")(display parser)(newline)
        % '()        
    % )
    
    
    
pianoConMolto = 
    #@(list
        #{ 
            \tweak DynamicText.self-alignment-X #LEFT 
            #(make-dynamic-script
                (markup 
                    #:dynamic "p"
                    #:normal-text #:italic "con molto"
                )
            )
            % \omit \p %dynamics for midi, but not displayed %%does not work
        #}
    )
    
mezzoPianoConMolto = 
    #@(list
        #{ 
            \tweak DynamicText.self-alignment-X #LEFT 
            #(make-dynamic-script
                (markup 
                    #:dynamic "mp"
                    #:normal-text #:italic "con molto"
                )
            )
            % \omit \mp %dynamics for midi, but not displayed %%does not work
        #}
    )
    
% textemdash = #"\u2014"
% textemdash = $(list->string (list (integer->char 8212)))
% the above both throw an error -- probably something relating to string encoding mismatch.

%% textemdash = #"–"
%the above works

% i̇́i %CC%87 %CC%81 <U+0069, U+0307, U+0301>
% Character name	LATIN SMALL LETTER I WITH DOT ABOVE AND ACUTE Copy 

% Unicode Character 'COMBINING DOT ABOVE' (U+0307)
% Unicode Character 'COMBINING ACUTE ACCENT' (U+0301)
% Unicode Character 'LATIN SMALL LETTER I' (U+0069)

accentedI = \markup{ \combine i  \raise #0.7 #"´"  }
%{ accentedI = \markup{ i  } %}
%% simpleAccentedI = \markup{ \simple { \combine i  \raise #0.75 #"´" } }
% example: 
% \markup{ \concat{ ab \accentedI c } }
\paper {
    #(add-text-replacements!
        '(
            ("&iAcute;" . " { \\accentedI } ")
            ; this does not work as desired
            ; ("&iAcute;" . \markup{ \combine i  \raise #0.75 #"´"  } )
        )
    )
}

pocoCrescendo = #(make-music 
    'CrescendoEvent
    'span-direction START
    'span-type 'text
    'span-text "poco cresc."
   )
   
pocoAPocoDiminuendo = #(make-music 
    'DecrescendoEvent
    'span-direction START
    'span-type 'text
    'span-text "poco a poco dim."
   )